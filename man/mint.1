.TH MINT 1 "December 2024" "mint" "User Commands"
.SH NAME
mint \- transform plain text documents into styled HTML
.SH SYNOPSIS
.B mint
[\fIOPTIONS\fR] [\fIFILE\fR...]
.SH DESCRIPTION
Mint transforms your plain text documents into beautiful documents. It makes that process as simple (but customizable) as possible.
.SH OPTIONS
.TP
.BR \-h ", " \-\-help
Show mint usage information
.TP
.BR \-d ", " \-\-destination " " \fIDIRECTORY\fR
Specify a destination directory
.TP
.BR \-m ", " \-\-style\-mode " " \fIMODE\fR
Specify how styles are included (inline, external, original). Default is inline.
.TP
.BR \-\-style\-destination " " \fIDESTINATION\fR
Create stylesheet at specified directory or file path and link it. This sets style mode to external.
.TP
.BR \-\-template " " \fITEMPLATE\fR
Specify a template to use for both layout and styling
.TP
.BR \-l ", " \-\-layout " " \fILAYOUT\fR
Specify a specific layout by name
.TP
.BR \-\-style " " \fISTYLE\fR
Specify a specific style by name
.TP
.BR \-o ", " \-\-output\-file " " \fIFORMAT\fR
Specify output filename format with substitutions (%{basename}, %{original_ext}, %{new_extension}), or '-' to output to STDOUT. STDOUT mode can only be used with a single file or STDIN input, and only with --style-mode inline or original.
.TP
.BR \-\-preserve\-structure
Preserve source directory structure (e.g., nesting) in destination (default: true)
.TP
.BR \-\-no\-preserve\-structure
Flatten all files into destination directory
.TP
.BR \-\-autodrop
Automatically drop common directory levels from output paths and navigation (default: true)
.TP
.BR \-\-no\-autodrop
Don't automatically drop common directory levels
.TP
.BR \-\-opt " " \fIOPTION\fR
Set layout option: \fB--opt key\fR or \fB--opt key=value\fR (can be used multiple times). Use \fB--opt no-key\fR to set option to false. Negated options cannot be combined with value assignment. Layout options are template-specific \- consult your template documentation for available options. The default template supports \fBnavigation\fR, \fBnavigation-depth=N\fR, \fBnavigation-title="Title"\fR, and \fBinsert-title-heading\fR
.SH STYLE OPTIONS
Mint offers flexible control over how stylesheets are incorporated into your documents:

.SS Inline styles (Default)
By default, Mint inlines CSS directly into your HTML documents, creating self-contained files:
.RS
.nf
mint Document.md
.fi
.RE

.SS External stylesheets
Create external stylesheets that are linked from your HTML documents:
.RS
.nf
mint Document.md --style-destination css
mint Document.md --style-destination styles/main.css
.fi
.RE

External stylesheets are useful when you want to share stylesheets across multiple documents, keep HTML files smaller, or allow separate caching of styles.

.SH DIRECTORY STRUCTURE
Mint provides flexible control over how source directory structure is handled in the output:

By default, Mint preserves the source directory structure but applies "autodrop" to remove common directory levels. For example, if all files are under docs/content/, that common prefix is automatically dropped.

Use --no-preserve-structure to flatten all files into the destination directory, ignoring source directory structure entirely.

Use --no-autodrop with --preserve-structure to keep the complete original directory structure without dropping any levels.
.SH CONFIGURATION
Mint can be configured using TOML configuration files in the following order of precedence:
.IP 1. 2
Command-line arguments (highest priority)
.IP 2. 2
Local config file: .mint/config.toml
.IP 3. 2
User config file: ~/.config/mint/config.toml  
.IP 4. 2
Built-in defaults (lowest priority)

Layout options can be set in configuration files and overridden on the commandline:
.RS
.nf
# In config.toml:
[options]
navigation = true
navigation-depth = 2
insert-title-heading = true

# Override on commandline:
mint Document.md --opt navigation-depth=4
.fi
.RE
.SH EXAMPLES
.TP
Transform a single Markdown file:
.nf
mint Document.md
.fi
.TP
Transform multiple files:
.nf
mint Document1.md Document2.md Document3.md
.fi
.TP
Insert title as H1 heading:
.nf
mint Document.md --opt insert-title-heading
.fi
.TP
Use a specific template:
.nf
mint Document.md --template nord
.fi
.TP
Create external stylesheet:
.nf
mint Document.md --style-destination css
.fi
.TP
Enable navigation with custom options:
.nf
mint Document.md --opt navigation --opt navigation-depth=2 --opt navigation-title="Contents"
.fi
.TP
Disable default options:
.nf
mint Document.md --opt no-navigation --opt no-insert-title-heading
.fi
.TP
Output to STDOUT instead of a file:
.nf
mint Document.md --output-file -
.fi
.TP
Pipe from STDIN to STDOUT:
.nf
echo "# Document" | mint - --output-file -
.fi
.SH TEMPLATES
Mint comes with several built-in templates:
.IP \(bu 2
.B default
\- Clean layout with serif font
.IP \(bu 2
.B nord/nord
\- Modern layout with sans-serif font; uses Nord color scheme and sans text
.IP \(bu 2
.B nord/nord-dark
\- Dark version of Nord
.PP
Templates use ERB-flavored HTML for layouts and CSS for styling.
.SH FILES
.TP
.I ~/.config/mint/
User-level configuration and templates ('user' scope)
.TP
.I .mint/
Project-level configuration and templates ('local' scope)
.SH AUTHOR
David Jacobs <david@wit.io>
.SH HOMEPAGE
https://github.com/davejacobs/mint